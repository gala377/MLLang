@EXPECTED
3
proper here
[1, 2, 3]
3
[1, 2, 10]
[3, 4, 5]

@SOURCE
fn max a b c:
  let m = a
  if m :lt? b:
    m = b
  if m :lt? c:
    m = c
  return m

io.print $ max 1 2 3
if max 1 2 3 :eq? 3:
  io.print "proper here"

let append = seq.append

let l = []

io.print $ l :append 1 :append 2 :append 3

fn id x = x

io.print $ 1 :max 3 $ id 2
io.print $ [] :append 1 :append 2 :append $ id 10
io.print $ [1, 2, 3] :map (add 1) :map do x -> x :inc